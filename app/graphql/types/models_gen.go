// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package types

import (
	"github.com/takeuchi-shogo/k8s-go-sample/domain/models"
)

type Matches struct {
	ID           string `json:"id"`
	MaleUserID   int    `json:"male_user_id"`
	FemaleUserID int    `json:"female_user_id"`
}

type NewAccounts struct {
	PhoneNumber string `json:"phone_number"`
	Email       string `json:"email"`
	Password    string `json:"password"`
}

type NewBlocks struct {
	Blocking int `json:"blocking"`
	Blocked  int `json:"blocked"`
}

type NewLikes struct {
	ReceiveUserID int `json:"receive_user_id"`
}

type NewLogin struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type NewReports struct {
	ReporterID int    `json:"reporter_id"`
	ReportedID int    `json:"reported_id"`
	Reason     string `json:"reason"`
}

type NewUserSearchFilters struct {
	Gender   *string `json:"gender"`
	Location *string `json:"location"`
}

type NewUsers struct {
	DisplayName string `json:"display_name"`
	ScreenName  string `json:"screen_name"`
	Gender      string `json:"gender"`
}

type NewVerifyEmails struct {
	Email   string `json:"email"`
	Token   string `json:"token"`
	PinCode string `json:"pin_code"`
}

type PageInfo struct {
	HasNextPage     bool    `json:"has_next_page"`
	HasPreviousPage bool    `json:"has_previous_page"`
	StartCursor     *string `json:"start_cursor"`
	EndCursor       *string `json:"end_cursor"`
}

type UpdateAccounts struct {
	ID              *int    `json:"id"`
	PhoneNumber     *string `json:"phone_number"`
	Email           *string `json:"email"`
	CurrentPassword *string `json:"current_password"`
	NewPassword     *string `json:"new_password"`
}

type UpdateUserProfiles struct {
	ID                               string  `json:"id"`
	UserID                           *int    `json:"user_id"`
	Introduction                     *string `json:"introduction"`
	Height                           *int    `json:"height"`
	BodyTypeID                       *int    `json:"body_type_id"`
	BloodTypeID                      *int    `json:"blood_type_id"`
	ResidenceCountryID               *int    `json:"residence_country_id"`
	ResidenceStateID                 *int    `json:"residence_state_id"`
	HometownCountryID                *int    `json:"hometown_country_id"`
	HometownStateID                  *int    `json:"hometown_state_id"`
	OccupationID                     *int    `json:"occupation_id"`
	EducationID                      *int    `json:"education_id"`
	AnnualIncomeID                   *int    `json:"annual_income_id"`
	SmokingID                        *int    `json:"smoking_id"`
	DrinkingID                       *int    `json:"drinking_id"`
	SiblingsID                       *int    `json:"siblings_id"`
	LanguageID                       *int    `json:"language_id"`
	InterestsID                      *int    `json:"interests_id"`
	LookingForID                     *int    `json:"looking_for_id"`
	SchoolName                       *string `json:"school_name"`
	JobTitle                         *string `json:"job_title"`
	MaritalHistoryID                 *int    `json:"marital_history_id"`
	PresenceOfChildrenID             *int    `json:"presence_of_children_id"`
	IntentionsTowardsMarriageID      *int    `json:"intentions_towards_marriage_id"`
	DesireForChildrenID              *int    `json:"desire_for_children_id"`
	HouseholdChoresAndChildRearingID *int    `json:"household_chores_and_child_rearing_id"`
	MeetingPreferenceID              *int    `json:"meeting_preference_id"`
	DatingExpensesID                 *int    `json:"dating_expenses_id"`
	PersonalityTypeID                *int    `json:"personality_type_id"`
	SociabilityID                    *int    `json:"sociability_id"`
	RoommatesID                      *int    `json:"roommates_id"`
	DaysOffID                        *int    `json:"days_off_id"`
	HobbiesID                        *int    `json:"hobbies_id"`
}

type UpdateUserSearchFilters struct {
	ID              string  `json:"id"`
	Gender          *string `json:"gender"`
	Location        *string `json:"location"`
	Purpose         int     `json:"purpose"`
	HasIntroduction bool    `json:"has_introduction"`
	HeightID        int     `json:"height_id"`
	BodyTypeID      int     `json:"body_type_id"`
	BloodTypeID     int     `json:"blood_type_id"`
	OccupationID    int     `json:"occupation_id"`
	EducationID     int     `json:"education_id"`
	AnnualIncomeID  int     `json:"annual_income_id"`
	SmokingID       int     `json:"smoking_id"`
	DrinkingID      int     `json:"drinking_id"`
}

type UpdateUsers struct {
	ID          *int    `json:"id"`
	DisplayName *string `json:"display_name"`
	ScreenName  *string `json:"screen_name"`
	Gender      string  `json:"gender"`
	Age         *int    `json:"age"`
	Location    *string `json:"location"`
}

type UserConnection struct {
	Edges    []*UserEdge `json:"edges"`
	PageInfo *PageInfo   `json:"page_info"`
}

type UserEdge struct {
	Cursor string                `json:"cursor"`
	Node   *models.ResponseUsers `json:"node"`
}
